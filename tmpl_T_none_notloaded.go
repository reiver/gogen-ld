package main

import (
	"github.com/reiver/gogen-ld/driver"
)

func init() {

	driver := gendriver.SimpleDriver{
		NamePattern: "{{.Name}}_none_notloaded.go",
		TextTemplate:
`// DO NOT EDIT
//
// MACHINE GENERATED BY THE FOLLOWING COMMAND
// gogen-ld --pkg={{.Pkg}} --type={{.Type}} --name={{.Name}}
package {{.Pkg}}

// THIS FILE IS GENERATED; DO NOT EDIT

type {{.Name}}NoneNotLoaded struct{}

// THIS FILE IS GENERATED; DO NOT EDIT

func ({{.Name}}NoneNotLoaded) String() string {
	return "<{{.Name}}NotLoaded>"
}

// THIS FILE IS GENERATED; DO NOT EDIT

// {{.Name}}Matcher makes {{.Name}}NoneNotLoaded fit the {{.Name}}Matcher interface.
func ({{.Name}}NoneNotLoaded) {{.Name}}Matcher() {
	// Nothing here.
}

// THIS FILE IS GENERATED; DO NOT EDIT

// Nullable{{.Name}}Matcher makes {{.Name}}NoneNotLoaded fit the Nullable{{.Name}}Matcher interface.
func ({{.Name}}NoneNotLoaded) Nullable{{.Name}}Matcher() {
	// Nothing here.
}
`}

	registry := gendriver.Registry
	if nil == registry {
		panic(errNilRegistry)
	}

	if err := registry.Register(driver.NamePattern, driver); nil != err {
		panic(err)
	}
}

