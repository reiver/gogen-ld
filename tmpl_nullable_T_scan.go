package main

import (
	"github.com/reiver/gogen-ld/driver"
)

func init() {

	driver := gendriver.SimpleDriver{
		NamePattern: "nullable_{{.Name}}_scan.go",
		TextTemplate:
`// DO NOT EDIT
//
// MACHINE GENERATED BY THE FOLLOWING COMMAND
// gogen-ld --pkg={{.Pkg}} --type={{.Type}} --name={{.Name}}
package {{.Pkg}}

{{if or (eq .Type "bool") (eq .Type "float64") (eq .Type "int64") (eq .Type "string") (eq .Type "time.Time") }}
import (
{{range .Imports}}
	"{{.}}"
{{end}}
	"github.com/reiver/go-cast"
)

// THIS FILE IS GENERATED; DO NOT EDIT

func (receiver *Nullable{{.Name}}) Scan(v interface{}) error {
	if nil == receiver {
		return errNilReceiver
	}

	if nil == v {
		var nothing {{.Type}}

		receiver.value  = nothing
		receiver.loaded = true
		receiver.null   = true

		return nil
	}

	{{if eq .Type "bool"}}
	castedValue, err := cast.Bool(v)
	{{else if eq .Type "float64"}}
	castedValue, err := cast.Float64(v)
	{{else if eq .Type "int64"}}
	castedValue, err := cast.Int64(v)
	{{else if eq .Type "string"}}
	castedValue, err := cast.String(v)
	{{else if eq .Type "time.Time"}}
	castedValue, err := cast.Time(v)
	{{else}}
	panic("THIS SHOULD NOT HAVE BEEN GENERATED!")
	{{end}}
	if nil != err {
		return err
	}

	receiver.value = castedValue
	receiver.loaded = true
	receiver.null   = false

	return nil
}
{{end}}
`}

	registry := gendriver.Registry
	if nil == registry {
		panic(errNilRegistry)
	}

	if err := registry.Register(driver.NamePattern, driver); nil != err {
		panic(err)
	}
}
